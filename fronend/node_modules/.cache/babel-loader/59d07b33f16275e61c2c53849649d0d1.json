{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadaljagthmi/sei/projects/project3-mars/blogger-website/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nave from './Component/Navebar/Nave';\nimport Home from './Component/Home';\nimport Register from './Component/Register';\nimport Forget from './Component/Forget';\nimport Message from './Component/Message';\nimport PrivateRoute from \"./PrivateRoute\";\nimport About from './Component/About';\nimport { Switch, Route, Redirect, BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport Login from './Component/Login';\nconst URL = \"http://localhost:3001/api\"; // import jwt_decode from 'jwt-decode'\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAuth: false,\n      user: null,\n      message: null,\n      userid: \"\"\n    };\n\n    this.loginHandler = async cred => {\n      try {\n        let data = await axios.post(`${URL}/auth/login`, cred); // console.log(data.data.token);\n\n        localStorage.setItem(\"token\", data.data.token);\n        this.getUser(data.data.token);\n      } catch (err) {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          message: err.response.data.message,\n          user: null\n        });\n      }\n    };\n\n    this.logoutHandler = e => {\n      e.preventDefault();\n      localStorage.removeItem(\"token\");\n      this.setState({\n        isAuth: false,\n        user: null,\n        message: null\n      });\n    };\n\n    this.getUser = async token => {\n      try {\n        let data = await axios.get(`${URL}/auth/user`, {\n          headers: {\n            \"x-auth-token\": token\n          }\n        }); //if success set state to isAuth and\n        // populate data with user data\n\n        this.setState({\n          isAuth: true,\n          message: null,\n          user: data.data.user\n        });\n      } catch (err) {\n        console.log(err);\n        localStorage.removeItem(\"token\");\n        this.setState({\n          isAuth: false,\n          message: err.response.data.message,\n          user: null\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    //gets token from localstorage\n    let token = localStorage.getItem(\"token\"); //check if token exists\n\n    if (!(token == null)) {\n      //decodes token\n      let user = decode(token); //check it token is valid\n\n      if (!user) {\n        //remove token\n        localStorage.removeItem(\"token\");\n      } //retrieves updated user from token\n\n\n      this.getUser(token);\n    }\n  }\n\n  render() {\n    // console.log(this.state.user)\n\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Nave, {\n      user: user,\n      logout: this.logoutHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), errorMessage, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        name: \"yasir\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 45\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/register\",\n      isAuth: isAuth,\n      component: AllMovies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => isAuth ? /*#__PURE__*/React.createElement(About, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 24\n        }\n      }) : /*#__PURE__*/React.createElement(Login, {\n        login: this.loginHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/mohammadaljagthmi/sei/projects/project3-mars/blogger-website/src/App.js"],"names":["React","Component","Nave","Home","Register","Forget","Message","PrivateRoute","About","Switch","Route","Redirect","BrowserRouter","Router","Login","URL","App","state","isAuth","user","message","userid","loginHandler","cred","data","axios","post","localStorage","setItem","token","getUser","err","console","log","setState","response","logoutHandler","e","preventDefault","removeItem","get","headers","componentDidMount","getItem","decode","render","errorMessage","AllMovies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nave from './Component/Navebar/Nave';\nimport Home from './Component/Home';\nimport Register from './Component/Register';\nimport Forget from './Component/Forget'\nimport Message from './Component/Message'\nimport PrivateRoute from \"./PrivateRoute\";\nimport About from './Component/About'\nimport { Switch, Route, Redirect, BrowserRouter as Router } from 'react-router-dom'\nimport './App.css';\nimport Login from './Component/Login';\nconst URL = \"http://localhost:3001/api\";\n\n// import jwt_decode from 'jwt-decode'\n\nexport default class App extends Component {\n\n  state = {\n    isAuth: false,\n    user: null,\n    message: null,\n    userid: \"\"\n  };\n\n  loginHandler = async (cred) => {\n    try {\n      let data = await axios.post(`${URL}/auth/login`, cred);\n      // console.log(data.data.token);\n\n      localStorage.setItem(\"token\", data.data.token);\n\n      this.getUser(data.data.token);\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        isAuth: false,\n        message: err.response.data.message,\n        user: null,\n      });\n    }\n  };\n\n  logoutHandler = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"token\");\n    this.setState({\n      isAuth: false,\n      user: null,\n      message: null,\n    });\n  };\n  getUser = async (token) => {\n    try {\n      let data = await axios.get(`${URL}/auth/user`, {\n        headers: {\n          \"x-auth-token\": token,\n        },\n      });\n      //if success set state to isAuth and\n      // populate data with user data\n      this.setState({\n        isAuth: true,\n        message: null,\n        user: data.data.user,\n      });\n    } catch (err) {\n      console.log(err);\n      localStorage.removeItem(\"token\");\n      this.setState({\n        isAuth: false,\n        message: err.response.data.message,\n        user: null,\n      });\n    }\n  };\n  componentDidMount() {\n    //gets token from localstorage\n    let token = localStorage.getItem(\"token\");\n    //check if token exists\n    if (!(token == null)) {\n      //decodes token\n      let user = decode(token);\n\n      //check it token is valid\n      if (!user) {\n        //remove token\n        localStorage.removeItem(\"token\");\n      }\n      //retrieves updated user from token\n      this.getUser(token);\n    }\n  }\n  render() {\n    // console.log(this.state.user)\n    <div>\n        <Nave user={user} logout={this.logoutHandler} />\n               \n        {errorMessage}\n        <Switch>\n          <Route path=\"/home\" render={() => <Home name={\"yasir\"} />} />\n          <PrivateRoute\n            exact\n            path=\"/register\"\n            isAuth={isAuth}\n            component={AllMovies}\n          />\n          <Route\n            path=\"/login\"\n            render={() =>\n              isAuth ? <About/> : <Login login={this.loginHandler} />\n            }\n          />\n        </Switch>\n      </div>\n\n\n\n   \n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}