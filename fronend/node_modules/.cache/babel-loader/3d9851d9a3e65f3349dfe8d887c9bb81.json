{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadaljagthmi/sei/projects/project3-mars/blogger-website/src/Component/post/Favorite.js\";\nimport React, { Component } from 'react';\nimport FavCard from \"../post/FavCard\";\nimport axios from \"axios\";\nimport PostCard from './PostCard';\nimport { Col, Image, Button, Form, Container, Row } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport Circle from 'react-animation-h3ro-yasir';\nimport { BsFillHeartFill, BsFillTrashFill } from \"react-icons/bs\";\nconst forget = {\n  fontSize: \"25px\"\n};\nconst notForget = {\n  marginLeft: \"0\",\n  fontSize: \"25px\"\n};\nexport default class Favorite extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favPost: [],\n      loading: false,\n      post: {}\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    axios.put(`http://localhost:5000/api/user/favbooks/${this.props.match.params}`, {\n      _id: this.props.user._id\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        favPost: response.data.favoritePost\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: true\n        });\n      }, 1000);\n    }).catch(err => console.log(err));\n  } // filterPost = ({ target: { value } }) => {\n  //     if (value == \"All\") {\n  //         this.setState({\n  //             favoritePost: this.state.favoritePost\n  //         })\n  //     } else {\n  //         this.setState({\n  //             selectedPost: this.state.Timeline.filter(post => {\n  //                 return post.typee == value\n  //             }\n  //             )\n  //         })\n  //     }\n  // }\n\n\n  render() {\n    console.log(this.state.favPost);\n    let F = this.state.favPost.map(e => {\n      return {\n        title: e.title,\n        poster: e.poster,\n        image: e.image,\n        overview: e.overview,\n        content: e.content,\n        _id: e._id\n      };\n    });\n    const Fave = F.map((post, i) => {\n      return /*#__PURE__*/React.createElement(FavCard, {\n        key: i,\n        post: post,\n        _id: F._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }\n      });\n    });\n    console.log(F); // let types = this.state.favoritePost.map(post => post.typee)\n    // types.unshift(\"All\")\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-5 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-5 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, this.state.loading ? Fave : /*#__PURE__*/React.createElement(Circle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 59\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mohammadaljagthmi/sei/projects/project3-mars/blogger-website/src/Component/post/Favorite.js"],"names":["React","Component","FavCard","axios","PostCard","Col","Image","Button","Form","Container","Row","Link","withRouter","Circle","BsFillHeartFill","BsFillTrashFill","forget","fontSize","notForget","marginLeft","Favorite","state","favPost","loading","post","componentDidMount","console","log","props","match","params","id","put","_id","user","then","response","setState","data","favoritePost","setTimeout","catch","err","render","F","map","e","title","poster","image","overview","content","Fave","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FavCard from \"../post/FavCard\"\nimport axios from \"axios\"\nimport PostCard from './PostCard'\nimport { Col, Image, Button, Form, Container, Row } from 'react-bootstrap'\nimport { Link, withRouter } from 'react-router-dom'\nimport Circle from 'react-animation-h3ro-yasir'\nimport { BsFillHeartFill, BsFillTrashFill } from \"react-icons/bs\";\n\nconst forget = {\n    fontSize: \"25px\"\n\n\n};\nconst notForget = {\n    marginLeft: \"0\",\n    fontSize: \"25px\"\n};\nexport default class Favorite extends Component {\n\n    state = {\n        favPost: [],\n        loading: false,\n        post :{}\n        \n    }\n    componentDidMount() {\n        console.log(this.props.match.params.id)\n        axios.put(`http://localhost:5000/api/user/favbooks/${this.props.match.params}`, {_id:this.props.user._id})\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    \n                    favPost: response.data.favoritePost\n                })\n                setTimeout(() => {\n                    this.setState({\n                        loading: true\n                    })\n                }, 1000);\n            }).catch(err => console.log(err))\n        \n            \n\n    }\n\n    // filterPost = ({ target: { value } }) => {\n\n    //     if (value == \"All\") {\n    //         this.setState({\n    //             favoritePost: this.state.favoritePost\n    //         })\n    //     } else {\n    //         this.setState({\n    //             selectedPost: this.state.Timeline.filter(post => {\n\n    //                 return post.typee == value\n    //             }\n    //             )\n    //         })\n    //     }\n    // }\n    render() {\n        console.log(this.state.favPost)\n        let F  =this.state.favPost.map((e)=>{\n            \n            return {\n                title: e.title,\n                poster:e.poster,\n                image:e.image,\n                overview:e.overview,\n                content:e.content,\n                _id:e._id\n\n                \n                \n        }\n        })\n\n        const Fave = F.map((post, i) => {\n            return <FavCard key={i} post={post} _id={F._id}/>\n        })\n        console.log(F)\n       \n             \n    \n        // let types = this.state.favoritePost.map(post => post.typee)\n        // types.unshift(\"All\")\n        return (\n            <div>\n\n                <div>\n\n                    <Container className=\"mt-5\">\n                        <Row className=\"mt-5 justify-content-center\">\n                            <Col md={4}>\n\n                            </Col>\n                        </Row>\n                        <Row className=\"mt-5 justify-content-center\" >\n\n                            {this.state.loading ? Fave : (<Circle />)}\n\n                        </Row>\n\n                    </Container>\n\n                </div >\n\n            </div >\n         )\n        \n    }   \n}"]},"metadata":{},"sourceType":"module"}