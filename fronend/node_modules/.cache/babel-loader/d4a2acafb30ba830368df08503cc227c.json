{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadaljagthmi/sei/projects/project3-mars/blogger-website/src/Component/post/Comment.jsx\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport PostCard from './PostCard';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nexport default class Comment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Timeline: [],\n      loading: false,\n      selectedPost: [],\n      post: {}\n    };\n\n    this.filterPost = ({\n      target: {\n        value\n      }\n    }) => {\n      if (value == \"All\") {\n        this.setState({\n          selectedPost: this.state.Comment\n        });\n      } else {\n        this.setState({\n          selectedPost: this.state.Comment.filter(post => {\n            return post.typee == value;\n          })\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:5000/api/post/timeline').then(res => {\n      console.log(res);\n      this.setState({\n        Timeline: res.data,\n        selectedPost: res.data,\n        post: res.data.filter(post => post._id == this.props.match.params.id)[0]\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: true\n        });\n      }, 1000);\n    }).catch(err => console.log(err));\n    console.log(this.state.Comment);\n  }\n\n  render() {\n    console.log(this.state.post);\n    let Comment = this.state.selectedPost.map((post, i) => {\n      return /*#__PURE__*/React.createElement(PostCard, {\n        key: i,\n        post: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }\n      });\n    });\n    let types = this.state.Timeline.map(post => post.content);\n    types.unshift(\"All\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 5,\n      className: \"mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: this.state.post.link,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, this.state.post.content))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/mohammadaljagthmi/sei/projects/project3-mars/blogger-website/src/Component/post/Comment.jsx"],"names":["React","Component","Axios","PostCard","Container","Row","Col","Image","Comment","state","Timeline","loading","selectedPost","post","filterPost","target","value","setState","filter","typee","componentDidMount","get","then","res","console","log","data","_id","props","match","params","id","setTimeout","catch","err","render","map","i","types","content","unshift","link","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios'\nimport PostCard from './PostCard'\nimport { Container, Row, Col, Image } from 'react-bootstrap'\n\nexport default class Comment extends Component {\n\n        state = {\n            Timeline: [],\n            loading: false,\n            selectedPost: [],\n            post :{}\n        }\n        componentDidMount() {\n            Axios.get('http://localhost:5000/api/post/timeline')\n                .then(res => {\n                    console.log(res)\n                    this.setState({\n                        Timeline: res.data,\n                        selectedPost: res.data,\n                        post: (res.data.filter(post => post._id ==this.props.match.params.id))[0]\n    \n                    })\n                    setTimeout(() => {\n                        this.setState({\n                            loading: true,\n                        })\n                    }, 1000);\n                }).catch(err => console.log(err))\n    \n    \n            console.log(this.state.Comment)\n        }\n    \n        filterPost = ({ target: { value } }) => {\n    \n            if (value == \"All\") {\n                this.setState({\n                    selectedPost: this.state.Comment\n                })\n            } else {\n                this.setState({\n                    selectedPost: this.state.Comment.filter(post => {\n    \n                        return post.typee == value\n                    }\n                    )\n                })\n            }\n        }\n\n   \n        render() {\n            console.log(this.state.post)\n    \n            let Comment = this.state.selectedPost.map((post, i) => {\n    \n                return <PostCard key={i} post={post} />\n            })\n            let types = this.state.Timeline.map(post => post.content)\n            types.unshift(\"All\")\n        return (\n            <div>\n                <Container>\n                <Col className =\"mt-5\">\n                <Col md ={5} className=\"mr-5\">\n                    <Image src={this.state.post.link} style={{height :\"100%\" , width : \"100%\"}} />\n                    <h4>{this.state.post.content}</h4>\n                </Col>\n\n                </Col>\n                <Col>\n                \n                </Col>\n\n                </Container>\n            </div>\n        )\n    }\n    }"]},"metadata":{},"sourceType":"module"}